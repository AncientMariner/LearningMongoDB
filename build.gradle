apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'

group = 'LearningMongoDB'
version = '1.0-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
    // same as maven central
//    mavenLocal()
//    mavenCentral()
    jcenter()
//     maven { url "http://repo.maven.apache.org/maven2" }
}


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.0'
    }
}

dependencies {
    def tomcatVersion = '7.0.57'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
    "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile group: 'org.mockito', name: 'mockito-all', version:'1.10.19'

    compile group: 'junit', name: 'junit', version:'4.12'
    compile group: 'org.springframework', name: 'spring-core', version:'4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version:'4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version:'4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version:'4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-test', version:'4.3.3.RELEASE'
    compile group: 'jstl', name: 'jstl', version:'1.2'
    compile group: 'org.springframework.data', name: 'spring-data-mongodb', version:'1.9.3.RELEASE'
    compile group: 'org.mongodb', name: 'mongo-java-driver', version:'3.3.0'
    compile group: 'log4j', name: 'log4j', version:'1.2.17'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.5'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version:'1.7.5'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
}

tomcatRun.contextPath = '/'
tomcatRunWar.contextPath = '/'

checkstyle {
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    //sourceSets = [sourceSets.main]
    ignoreFailures = true
    //checkstyleAcceptanceTests.ignoreFailures = true
}

task customFindbugs(type: FindBugs) {
    ignoreFailures = true
    effort = "default"
    reportLevel = "medium"
    classes = files("$project.buildDir/classes")
    excludeFilter = file("$rootProject.rootDir/config/findbugs/exclude.xml")

    source = fileTree('src/')
    classpath = files()
    reports {
        xml.enabled = false
        xml.withMessages = true
        html.enabled = !xml.isEnabled()
        xml.destination "$project.buildDir/reports/findbugs/findbugs-output.xml"
        html.destination "$project.buildDir/reports/findbugs/findbugs-output.html"
    }
}

//findbugsMain {
//    reports {
//        xml.enabled = false
//        html.enabled = true
//    }
//}

//findbugs {
//    ignoreFailures = true
//}

